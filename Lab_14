using System;

class Trapezoid
{
    private double base1;
    private double base2;
    private double height;

    public double Base1
    {
        get { return base1; }
        set { base1 = value; }
    }

    public double Base2
    {
        get { return base2; }
        set { base2 = value; }
    }

    public double Height
    {
        get { return height; }
        set { height = value; }
    }

    public double Area
    {
        get { return ((base1 + base2) / 2) * height; }
    }

    public Trapezoid()
    {
        base1 = 0;
        base2 = 0;
        height = 0;
    }

    public Trapezoid(double base1, double base2, double height)
    {
        this.base1 = base1;
        this.base2 = base2;
        this.height = height;
    }

    public override string ToString()
    {
        return $"Base1: {base1}, Base2: {base2}, Height: {height}, Area: {Area}";
    }
}

class Program
{
    static void Main(string[] args)
    {
       
        int N = 5;
        Trapezoid[] trapezoids = new Trapezoid[N];
        trapezoids[0] = new Trapezoid(2, 4, 3);
        trapezoids[1] = new Trapezoid(3, 6, 4);
        trapezoids[2] = new Trapezoid(1, 3, 2);
        trapezoids[3] = new Trapezoid(5, 8, 6);
        trapezoids[4] = new Trapezoid(4, 7, 5);
        Console.WriteLine("Original Array:");
        PrintArray(trapezoids);
        Array.Sort(trapezoids, (t1, t2) => t1.Area.CompareTo(t2.Area));
        Console.WriteLine("Sorted Array:");
        PrintArray(trapezoids);
        Console.ReadLine();
    }

    static void PrintArray(Trapezoid[] array)
    {
        foreach (Trapezoid trapezoid in array)
        {
            Console.WriteLine(trapezoid);
        }
        Console.WriteLine();
    }
}
